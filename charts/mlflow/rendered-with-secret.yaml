---
# Source: mlflow/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-release-mlflow
  labels:
    helm.sh/chart: mlflow-1.4.1
    app: mlflow
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: test-release
    version: "3.2.0"
    app.kubernetes.io/version: "3.2.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: mlflow/templates/auth_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-release-mlflow-auth-config-secret
  labels:
    app: mlflow
    chart: mlflow-1.4.1
    release: test-release
    heritage: Helm
type: Opaque
stringData:
  basic_auth.ini: |-
    [mlflow]
    default_permission = READ
    database_uri = postgresql://$(AUTH_PGUSER):$(AUTH_PGPASSWORD)@postgresql--auth-instance1.abcdef1234.eu-central-1.rds.amazonaws.com:5432/auth
    admin_username = admin
    admin_password = S3cr3+
    authorization_function = mlflow.server.auth:authenticate_request_basic_auth
---
# Source: mlflow/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-release-mlflow-env-secret
  labels:
    app: mlflow
    chart: mlflow-1.4.1
    release: test-release
    heritage: Helm
type: Opaque
data:
---
# Source: mlflow/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-release-mlflow-env-configmap
  labels:
    app: mlflow
    chart: mlflow-1.4.1
    release: test-release
    heritage: Helm
data:
  PGHOST: postgresql-instance1.cg034hpkmmjt.eu-central-1.rds.amazonaws.com
  PGPORT: "5432"
  PGDATABASE: mlflow
  MLFLOW_CONFIGURE_LOGGING: "true"
  MLFLOW_LOGGING_LEVEL: "INFO"
---
# Source: mlflow/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-release-mlflow
  labels:
    helm.sh/chart: mlflow-1.4.1
    app: mlflow
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: test-release
    version: "3.2.0"
    app.kubernetes.io/version: "3.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      name: http
  selector:
    app: mlflow
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: test-release
---
# Source: mlflow/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-release-mlflow
  labels:
    helm.sh/chart: mlflow-1.4.1
    app: mlflow
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: test-release
    version: "3.2.0"
    app.kubernetes.io/version: "3.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      app: mlflow
      app.kubernetes.io/name: mlflow
      app.kubernetes.io/instance: test-release
  template:
    metadata:
      annotations:
        checksum/config: c475bbc1a9606d12423b8e9382dfd4334d84bdf74c0638eb2fbe5e62e25dbb7f
      labels:
        app: mlflow
        app.kubernetes.io/name: mlflow
        app.kubernetes.io/instance: test-release
    spec:
      serviceAccountName: test-release-mlflow
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: mlflow
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          image: "burakince/mlflow:3.2.0"
          imagePullPolicy: IfNotPresent
          command: ["mlflow"]
          args:
            - server
            - --host=0.0.0.0
            - --port=5000
            - --backend-store-uri=postgresql://
            - --default-artifact-root=./mlruns
            - --app-name=basic-auth
            - --gunicorn-opts='--log-level=info'
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 3
          resources:
            {}
          env:
            - name: MLFLOW_VERSION
              value: "3.2.0"
            - name: MLFLOW_AUTH_CONFIG_PATH
              value: /etc/mlflow/auth/basic_auth.ini
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-database-secret
                  key: password
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-database-secret
                  key: username
            - name: AUTH_PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-database-secret-auth
                  key: username
            - name: AUTH_PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-database-secret-auth
                  key: password
          envFrom:
            - configMapRef:
                name: test-release-mlflow-env-configmap
            - secretRef:
                name: test-release-mlflow-env-secret
            - secretRef:
                name: test-release-mlflow-flask-server-secret-key
          volumeMounts:
            - name: auth-config-secret
              mountPath: "/etc/mlflow/auth"
              readOnly: true
      volumes:
        - name: auth-config-secret
          secret:
            secretName: test-release-mlflow-auth-config-secret
---
# Source: mlflow/templates/flask_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-release-mlflow-flask-server-secret-key
  namespace: default
  labels:
    app: mlflow
    chart: mlflow-1.4.1
    release: test-release
    heritage: Helm
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
type: Opaque
data:
  MLFLOW_FLASK_SERVER_SECRET_KEY: "MWExN2NmMWRlOGJhZjk0YWMxZGIzYzA5MDc0OWRhNGU="
