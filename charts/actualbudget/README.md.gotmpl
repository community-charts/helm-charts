{{ template "chart.header" . }}

![actualbudget](https://actualbudget.org/img/actual.png)

{{ template "chart.description" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

## Official Documentation

For detailed usage instructions, configuration options, and additional information about the `{{ template "chart.name" . }}` Helm chart, refer to the [official documentation](https://community-charts.github.io/docs/charts/{{ template "chart.name" . }}/usage).

## Get Helm Repository Info

```console
helm repo add community-charts https://community-charts.github.io/helm-charts
helm repo update
```

_See [`helm repo`](https://helm.sh/docs/helm/helm_repo/) for command documentation._

## Installing the Chart

```console
helm install [RELEASE_NAME] community-charts/{{ template "chart.name" . }}
```

_See [configuration](#configuration) below._

_See [helm install](https://helm.sh/docs/helm/helm_install/) for command documentation._

> **Tip**: Search all available chart versions using `helm search repo community-charts -l`. Please don't forget to run `helm repo update` before the command.

## Full Example

This configuration mounts a PersistentVolumeClaim (`actualbudget-volume`) to `/data`, where server files (`/data/server-files`) and user files (`/data/user-files`) are stored. The `/data` folder persists across pod restarts, ensuring data retention.

```yaml
strategy:
  type: Recreate

files:
  server: /data/server-files
  user: /data/user-files

ingress:
  enabled: true
  hosts:
    - host: actualbudget.local
      paths:
        - path: /
          pathType: ImplementationSpecific

persistence:
  enabled: true
  existingClaim: actualbudget-volume
```

## Configuring OpenID Connect

The `actualbudget` Helm chart supports OpenID Connect (OIDC) for authentication with providers like Keycloak or Auth0. Please find full tested providers from [here](https://actualbudget.org/docs/config/oauth-auth/#tested-providers). Configure the `login.openid` settings in `values.yaml` or a `secrets.yaml` file to enable it. See the [Values](#values) table for all options, including `login.openid.tokenExpiration` (valid values: `"never"`, `"openid-provider"`, or seconds like `3600`).

### Example Configuration

To use OpenID with a Kubernetes Secret for sensitive data:

1. **Create a Secret**:

```bash
kubectl create secret generic actualbudget-openid-secret \
  --from-literal=clientId=actualbudget-client \
  --from-literal=clientSecret=your-client-secret
```

2. **Update `values.yaml`**:

```yaml
login:
  method: "openid"
  openid:
    enforce: true
    providerName: "Keycloak"
    discoveryUrl: "https://keycloak.example.com/auth/realms/my-realm/.well-known/openid-configuration"
    tokenExpiration: 3600
    existingSecret:
      name: "actualbudget-openid-secret"
      clientIdKey: "clientId"
      clientSecretKey: "clientSecret"
```

## Upgrading

This section provides information about significant updates and breaking changes in each version of the Helm Chart to facilitate a smooth upgrade process.

---

### Version-Specific Upgrade Notes

#### Upgrading to Version 1.5.x

##### Deprecation Notice

- The `login.openid.dicovertUrl` field has been deprecated.

##### Required Action

Please update your configuration to use the `login.openid.discoveryUrl` field in place of the deprecated one.

{{ template "chart.requirementsSection" . }}

## Uninstall Helm Chart

```console
helm uninstall [RELEASE_NAME]
```

This removes all the Kubernetes components associated with the chart and deletes the release.

_See [helm uninstall](https://helm.sh/docs/helm/helm_uninstall/) for command documentation._

## Upgrading Chart

```console
helm upgrade [RELEASE_NAME] community-charts/{{ template "chart.name" . }}
```

{{ template "chart.valuesSection" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

## Chart Development

Please install unittest helm plugin with `helm plugin install https://github.com/helm-unittest/helm-unittest.git` command and use following command to run helm unit tests.

```console
helm unittest --strict --file 'unittests/**/*.yaml' charts/{{ template "chart.name" . }}
```

{{ template "chart.maintainersSection" . }}
