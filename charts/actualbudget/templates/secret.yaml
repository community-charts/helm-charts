{{- if and .Values.ingress.enabled (eq .Values.login.method "openid") (contains "openid" (.Values.login.allowedLoginMethods | join ",")) (semverCompare ">=25.1.0" (ternary .Chart.AppVersion .Values.image.tag (eq .Values.image.tag ""))) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "actualbudget.fullname" . }}-openid-secret
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  ACTUAL_MULTIUSER: {{ "true" | b64enc }}
  ACTUAL_OPENID_ENFORCE: {{ printf "%t" .Values.login.openid.enforce | b64enc }}
  ACTUAL_OPENID_PROVIDER_NAME: {{ .Values.login.openid.providerName | b64enc }}
  ACTUAL_OPENID_CLIENT_ID: {{ required "OAuth2 clientId is required" .Values.login.openid.clientId | b64enc }}
  ACTUAL_OPENID_CLIENT_SECRET: {{ required "OAuth2 clientSecret is required" .Values.login.openid.clientSecret | b64enc }}
{{- $httpSchema := ternary "https" "http" (gt (len .Values.ingress.tls) 0) }}
{{- with (first .Values.ingress.hosts) }}
  ACTUAL_OPENID_SERVER_HOSTNAME: {{ printf "%s://%s" $httpSchema .host | b64enc }}
{{- end }}
{{- if or .Values.login.openid.discoveryUrl .Values.login.openid.dicovertUrl }}
  ACTUAL_OPENID_DISCOVERY_URL: {{ (default .Values.login.openid.dicovertUrl .Values.login.openid.discoveryUrl) | b64enc }}
{{- else }}
  ACTUAL_OPENID_AUTHORIZATION_ENDPOINT: {{ .Values.login.openid.authorizationEndpoint | b64enc }}
  ACTUAL_OPENID_TOKEN_ENDPOINT: {{ .Values.login.openid.tokenEndpoint | b64enc }}
  ACTUAL_OPENID_USERINFO_ENDPOINT: {{ .Values.login.openid.userInfoEndpoint | b64enc }}
{{- end }}
{{- end }}
