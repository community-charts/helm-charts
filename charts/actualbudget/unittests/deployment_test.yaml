suite: test deployment

templates:
  - deployment.yaml

release:
  name: actualbudget
  namespace: actualbudget

chart:
  version: 1.0.0
  appVersion: 1.0.0

tests:
  - it: should be custom service account when we do not create it
    set:
      serviceAccount.create: false
      serviceAccount.name: customsa
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: customsa

  - it: should show actual post environment variable
    set:
      service.port: 1234
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_PORT
            value: "1234"

  - it: should set actual data directory environment variable
    set:
      files.dataDirectory: "/somewhere/data"
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_DATA_DIR
            value: "/somewhere/data"

  - it: should set actual server files environment variable
    set:
      files.server: "/somewhere/server"
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_SERVER_FILES
            value: "/somewhere/server"

  - it: should set actual user files environment variable
    set:
      files.user: "/somewhere/user"
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_USER_FILES
            value: "/somewhere/user"

  - it: should set actual upload file sync limit environment variable
    set:
      upload.fileSizeSyncLimitMB: 20
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_UPLOAD_FILE_SYNC_SIZE_LIMIT_MB
            value: "20"

  - it: should set actual upload sync encrypted file size limit environment variable
    set:
      upload.syncEncryptedFileSizeLimitMB: 50
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_UPLOAD_SYNC_ENCRYPTED_FILE_SYNC_SIZE_LIMIT_MB
            value: "50"

  - it: should set actual upload file size limit environment variable
    set:
      upload.fileSizeLimitMB: 20
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_UPLOAD_FILE_SIZE_LIMIT_MB
            value: "20"

  - it: should set actual login method environment variable
    set:
      login.method: "header"
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_LOGIN_METHOD
            value: "header"

  - it: should set actual allowed login methods environment variable
    set:
      login.allowedLoginMethods:
        - openid
        - password
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: ACTUAL_ALLOWED_LOGIN_METHODS
            value: "openid,password"

  - it: should set actual skip SSL verification environment variable when skipSSLVerification is true
    set:
      login.skipSSLVerification: true
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].env
          content:
            name: NODE_TLS_REJECT_UNAUTHORIZED
            value: "0"

  - it: should set openid environment variables from secret when openid is enabled and dicovertUrl is set and clientId is set and clientSecret is set
    set:
      ingress:
        enabled: true
        hosts:
          - host: actualbudget.local
            paths:
              - path: /
                pathType: ImplementationSpecific
      login:
        method: "openid"
        allowedLoginMethods:
          - openid
        openid:
          dicovertUrl: "https://openid.com/.well-known/openid-configuration"
          clientId: "openid-client-id"
          clientSecret: "openid-client-secret"
    chart:
      appVersion: 25.1.0
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].envFrom
          content:
            secretRef:
              name: actualbudget-openid-secret

  - it: should set openid environment variables from secret when openid is enabled and authorizationEndpoint is set and tokenEndpoint is set and userInfoEndpoint is set and clientId is set and clientSecret is set
    set:
      ingress:
        enabled: true
        hosts:
          - host: actualbudget.local
            paths:
              - path: /
                pathType: ImplementationSpecific
      login:
        method: "openid"
        allowedLoginMethods:
          - openid
        openid:
          clientId: "openid-client-id"
          clientSecret: "openid-client-secret"
          authorizationEndpoint: "https://openid.com/authorize"
          tokenEndpoint: "https://openid.com/token"
          userInfoEndpoint: "https://openid.com/userinfo"
    chart:
      appVersion: 25.1.0
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].envFrom
          content:
            secretRef:
              name: actualbudget-openid-secret

  - it: should set extra containers (sidecars) when extraContainers are set
    set:
      extraContainers:
        - name: fake-container
          image: fake-image
          command: ["fake-command"]
    asserts:
      - contains:
          path: spec.template.spec.containers
          content:
            name: fake-container
            image: fake-image
            command: ["fake-command"]

  - it: should set init containers when initContainers are set
    set:
      initContainers:
        - name: fake-init-container
          image: fake-init-image
          command: ["fake-init-command"]
    asserts:
      - contains:
          path: spec.template.spec.initContainers
          content:
            name: fake-init-container
            image: fake-init-image
            command: ["fake-init-command"]

  - it: should set persistence when persistence is enabled
    set:
      persistence:
        enabled: true
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: data
            persistentVolumeClaim:
              claimName: actualbudget-data

  - it: should set persistence sub path when persistence sub path is set
    set:
      persistence:
        enabled: true
        subPath: /data/fake-sub-path-file.txt
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].volumeMounts
          content:
            mountPath: /data
            name: data
            subPath: /data/fake-sub-path-file.txt

  - it: should set volume mounts when volumeMounts are set
    set:
      volumeMounts:
        - name: fake-volume
          mountPath: /fake/path
          subPath: fake-sub-path
    asserts:
      - contains:
          path: spec.template.spec.containers[?(@.name == "actualbudget")].volumeMounts
          content:
            name: fake-volume
            mountPath: /fake/path
            subPath: fake-sub-path

  - it: should set volumes when volumes are set
    set:
      volumes:
        - name: fake-volume
          persistentVolumeClaim:
            claimName: fake-existing-claim
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: fake-volume
            persistentVolumeClaim:
              claimName: fake-existing-claim

  - it: should set affinity when affinity is set
    set:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: disktype
                    operator: In
                    values:
                      - ssd
    asserts:
      - contains:
          path: spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution
          content:
            weight: 1
            preference:
              matchExpressions:
                - key: disktype
                  operator: In
                  values:
                    - ssd

  - it: should set tolerations when tolerations are set
    set:
      tolerations:
        - key: fake-key
          operator: fake-operator
          value: fake-value
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: fake-key
            operator: fake-operator
            value: fake-value
